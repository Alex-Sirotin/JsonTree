<?php


use PHPUnit\Framework\TestCase;

class JsonTreeArrayTest extends JsonTreeTestCase
{

    private string $fileName;

    function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $testData = new TestData(10_000_000);
        $testData->setFaker(\Faker\Factory::create());
        try {
            $this->fileName = $testData->generateFile();
        } catch (\Exception $exception) {
            $this->output($exception->getMessage());
        }
    }

    function testBigArray()
    {
        $file = new SplFileObject($this->fileName, "r");
//        //$file->setFlags(SplFileObject::READ_AHEAD|SplFileObject::SKIP_EMPTY|SplFileObject::DROP_NEW_LINE);
//
//        $file->seek(99_999_000);
//        echo $file->current() . "\n";
////        $this->assertNotEmpty($file->current());
//        $file->seek(99_999_998);
////        $this->assertNotEmpty($file->current());
//        $file->seek(99_999_999);
////        $this->assertNotEmpty($file->current());
//        ob_flush();
//
////        $startMemory = memory_get_usage();
////        $array = range(1, 120_000_000);
////
////        $endMemory = memory_get_usage() - $startMemory;
////        //print_r($endMemory = memory_get_usage() - $startMemory);
////        print_r(round($endMemory / 1024 / 1024) . ' MB');
        $this->assertTrue(true);
    }
}